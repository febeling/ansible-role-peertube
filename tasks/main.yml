---
- name: Group
  group:
    name: '{{ peertube__group }}'
    system: true

- name: User
  user:
    name: '{{ peertube__user }}'
    group: '{{ peertube__group }}'
    system: true
    create_home: false

- name: Create directories
  file:
    state: directory
    path: '{{ item }}'
    mode: 'u=rwx,g=rx,o=rx'
    owner: '{{ peertube__user }}'
    group: '{{ peertube__group }}'
  with_items:
    - '{{ peertube__dir }}'
    - '{{ peertube__config_dir }}'
    - '{{ peertube__storage_dir }}'
    - '{{ peertube__versions_dir }}'

- name: Create config
  copy:
    src: templates/production.yaml
    dest: '{{ peertube__config_file }}'
    mode: 'u=rwx,g=,o='
    owner: '{{ peertube__user }}'
    group: '{{ peertube__group }}'

- name: Fetch archive
  get_url:
    url: '{{ peertube__archive_url }}'
    checksum: '{{ peertube__archive_checksum }}'
    dest: '{{ peertube__archive_file }}'
    mode: 'u=rw,g=r,o=r'
    owner: '{{ peertube__user }}'
    group: '{{ peertube__group }}'

- name: Extract archive
  unarchive:
    remote_src: true
    src: '{{ peertube__archive_file }}'
    dest: '{{ peertube__versions_dir }}'
    owner: '{{ peertube__user }}'
    group: '{{ peertube__group }}'

- name: Create link to current version
  file:
    state: link
    src: '{{ peertube__version_dir }}'
    dest: '{{ peertube__current_link }}'
    owner: '{{ peertube__user }}'
    group: '{{ peertube__group }}'

- name: Create systemd service
  template:
    src: templates/peertube.service
    dest: '/etc/systemd/system/{{ peertube__service }}.service'
    mode: 'u=rw,g=r,o=r'
    owner: root
    group: root
  notify: peertube | systemd
